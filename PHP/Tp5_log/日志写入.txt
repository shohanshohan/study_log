有时会有要记录一些调试信息，或希望在日志文件中打印记录一些当时请求的信息
先 use think\Log;
在需要保存日志的地方使用：Log::record(date('Y-m-d H:i:s') . $strInfo, 'debug-info'); 
//参数说明，第一个为需要记录的信息（字符串），第二个为自定义的日志说明（可以随意起名）

如果要实时定稿一条日志信息：Log::write($info,'info-name'); 
//一般不用实时，记录到内存就可以了，如果实时记录，打印的位置就不是在最后面显示，而是插入

在某些情况下，需要对日志记录进行分析和处理，那么开启单文件日志写入就会方便分析。（一般不用这个）
'log'   => [
    'type'  => 'File',
    // 日志记录级别，使用数组表示
    'single' => true, 
],


日志自动清理（日志保存不再有日期文件夹，而是统一保存到runtime/log目录下了，文件名同样有具体日期）
V5.0.16+版本开始，支持文件日志的自动清理功能，你可以设置
'max_files'	=> 30
则日志文件最多只会保留30个，超过会自动清理较早的日志文件，避免日志文件长期写入占满磁盘空间。


//单个日志文件的大小限制，超过后会自动记录到第二个文件
'file_size'     =>1024*1024*10, //不超过10M


// 设置授权只有202.12.36.89访问 才能记录日志
'allow_key' =>  ['202.12.36.89'],
// 设置IP为授权Key
Log::key(Request::instance()->ip());

