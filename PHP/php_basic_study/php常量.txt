常量是一个简单值的标识符（名字）。在脚本执行期间该值不能改变（除了所谓的魔术常量，它们其实不是常量）。

命名规范：合法的常量名以字母或下划线开始，后面跟着任何字母，数字或下划线，一般是大写字母开头，常量默认为大小写敏感。传统上常量标识符总是大写的

作用范围：常量的范围是全局的，不用管作用区域就可以在脚本的任何地方访问常量

定义常量：define('PHP_CONSTANS','value'); 或 defined('PHP_CONST') or define('PHP_CONST','value'); //先判断是否定义，如果没有就定义
也可以在类中用关键字 const 来定义 class Test{ const PHP_CONST = 'class-const'; },在 PHP 5.3.0 以后，可以使用 const 关键字在类定义之外定义常量
注：使用 const 关键字定义常量必须处于最顶端的作用区域，因为用此方法是在编译时定义的

常量和变量有如下不同：
常量前面没有美元符号（$）；
常量只能用 define() 函数定义，而不能通过赋值语句；
常量可以不用理会变量的作用域而在任何地方定义和访问；
常量一旦定义就不能被重新定义或者取消定义；
常量的值只能是标量。（int, string, float, boolean）

调用常量：echo PHP_CONSTANS;

可用函数 get_defined_constants() 来获取所有已定义常量列表，PHP 向它运行的任何脚本提供了大量的预定义常量。不过很多常量都是由不同的扩展库定义的


魔术常量：严格意义上来说不是常量，它们的值随着它们在代码中的位置改变而改变。
有八个魔术常量，这些特殊的常量不区分大小写，如下：
__LINE__	文件中的当前行号。
__FILE__	文件的完整路径和文件名。如果用在被包含文件中，则返回被包含的文件名。
__DIR__	文件所在的目录。如果用在被包括文件中，则返回被包括的文件所在的目录。它等价于 dirname(__FILE__)。除非是根目录，否则目录中名不包括末尾的斜杠。
__FUNCTION__	函数名称。自 PHP 5 起本常量返回该函数被定义时的名字（区分大小写）。
__CLASS__	类的名称。自 PHP 5 起本常量返回该类被定义时的名字（区分大小写）。
__TRAIT__	Trait 的名字。自 PHP 5.4 起此常量返回 trait 被定义时的名字（区分大小写）。Trait 名包括其被声明的作用区域（例如 Foo\Bar）。
__METHOD__	类的方法名。返回该方法被定义时的名字（区分大小写）。
__NAMESPACE__	当前命名空间的名称（区分大小写）。



