使用主从同步的好处：提升主服务器性能，提高数据安全
（1）配置主服务器master
1）编辑设置配置文件 /etc/my.cnf下的 [mysqld]，
如果之前有配置过的，先检查一下当前用的my.cnf文件是哪一个
mysql 查看当前使用的配置文件my.cnf的方法：
使用locate my.cnf命令可以列出所有的my.cnf文件
命令 locate my.cnf
查看是否使用了指定目录的my.cnf
启动mysql后，我们查看mysql的进程，看看是否有设置使用指定目录的my.cnf文件，如果有则表示mysql启动时是加载了这个配置文件。
命令
ps aux|grep mysql|grep 'my.cnf'
如果上面的命令没有输出，表示没有设置使用指定目录的my.cnf。

查看mysql默认读取my.cnf的目录
如果没有设置使用指定目录的my.cnf，mysql启动时会读取安装目录根目录及默认目录下的my.cnf文件。
查看mysql启动时读取配置文件的默认目录
命令 mysql --help|grep 'my.cnf'
这些就是mysql默认会搜寻my.cnf的目录，顺序排前的优先。
如果没有设置使用指定目录my.cnf文件及默认读取目录没有my.cnf文件，表示mysql启动时并没有加载配置文件，而是使用默认配置。
需要修改配置，可以在mysql默认读取的目录中，创建一个my.cnf文件(例如:/etc/my.cnf)，把需要修改的配置内容写入，重启mysql后即可生效。
sudo service mysql restart

my.cnf文件确定以后，设置 [mysqld]:
server-id=1  #给服务器分配一个独一无二的ID编号, 整数类型
log-bin=mysql-bin  #启用二进制日志功能
binlog-do-db=your_db #给定数据库的变化情况记入二进制日志文件（也就是要主从服务的数据库），如果有多个数据库，另起一行 binlog-do-db=your_db2
binlog-ignore-db=mysql #不记录的数据库
server-id不能相同，主服务器配置为1，从服务器配置其他数值如：2

2）配置好后，重启主服务器mysql: sudo service mysql restart
登录mysql: mysql -u root -p123456 (用户名和密码根据自己的写，这里只是示例)
创建用于从服务器同步数据使用的账号(也就是授权从服务器)
mysql> grant replication slave on *.* to 'slave_mysql_user'@'slave_server_adress' identified by 'slave_password';
注：slave_mysql_user：从服务器mysql用户名
slave_server_adres：从服务器的ip地址
slave_password：从服务器mysql用户的密码
这里注意：on 后面不能指定数据库如：on my_db.*  因为数据库指定在配置文件中有，这里用 * 表示所有就可以了。
刷新授权：
mysql> flush privileges;

3）查看主服务器 master 状态
mysql> show master status;
内容类似：
+------------------+----------+--------------+------------------+
| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB |
+------------------+----------+--------------+------------------+
| mysql-bin.000005 |     5942 | tanqiu       | mysql            |
+------------------+----------+--------------+------------------+
File为使用的日志文件名字，Position为使用的文件位置，这两个参数必须记下，配置从服务器时会用到。



（2）配置从服务器器slave
1）开始也是编辑 my.cnf 文件，设置：
server-id=2  #注意这里不能与主服务器相同
log-bin=mysql-bin
binlog-do-db=your_db
binlog-ignore-db=mysql
重启mysql: sudo service mysql restart

2）配置好后，同步到主服务器地址
登录从服务器mysql： mysql -u root -p123456
mysql> stop slave;
mysql> change master to master_host='master_server_ip',master_user='username',master_password='123456',master_log_file='mysql-bin.000005,master_log_pos=5942;
注：master_server_ip：主服务器ip地址
master_user：主服务器mysql用户名
master_password：主服务器mysql密码
master_log_file：日志文件名（与主服务器配置的File内容一致）
master_log_pos：主服务器日志文件位置（与主服务器配置的Position内容一致）
开启同步
mysql> start slave;
查看同步状态：
mysql> show slave status \G
如果 Slave_IO_Running、Slave_SQL_Running 状态为Yes则说明设置成功。 


（3）在从服务器中创建数据库和表，如果配置主从之前在主服务器中已有数据，把主服务器的数据复制过去


