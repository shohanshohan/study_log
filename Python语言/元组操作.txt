Python3 元组
Python 的元组与列表类似，不同之处在于元组的元素不能修改。
元组使用小括号，列表使用方括号。
元组创建很简单，只需要在括号中添加元素，并使用逗号隔开即可。
如下实例：
tup1 = ('Google', 'Runoob', 1997, 2000);
tup2 = (1, 2, 3, 4, 5 );
tup3 = "a", "b", "c", "d";
创建空元组
tup1 = ();

元组中只包含一个元素时，需要在元素后面添加逗号，否则括号会被当作运算符使用：
>>> tup1 = (50)
>>> type(tup1)     # 不加逗号，类型为整型
<class 'int'>

>>> tup1 = (50,)
>>> type(tup1)     # 加上逗号，类型为元组
<class 'tuple'>


元组与字符串类似，下标索引从0开始，可以进行截取，组合等。




1）访问元组
元组可以使用下标索引来访问元组中的值，如下实例:
tup = (1,2,3,4,5,6)
print(tup[1]) #2
print(tup[1:5]) #(2,3,4,5)
print(tup[-1]) #6



2）元组重组
元组中的元素值是不允许修改的，但我们可以对元组进行连接组合，如下实例:
>>> tup1 = (1,2,3)
>>> tup2 = (4,5,6)
>>> tup3 = tup1 + tup2
>>> print(tup3)
(1, 2, 3, 4, 5, 6)




3）删除元组
元组中的元素值是不允许删除的，但我们可以使用del语句来删除整个元组，如下实例:
tup = (1,2,3)
del tup



4）元组运算符
与字符串一样，元组之间可以使用 + 号和 * 号进行运算。这就意味着他们可以组合和复制，运算后会生成一个新的元组。
Python 表达式			结果				描述

len((1, 2, 3))			3				计算元素个数

(1, 2, 3) + (4, 5, 6)		(1, 2, 3, 4, 5, 6)		连接

('Hi!',) * 4			('Hi!', 'Hi!', 'Hi!', 'Hi!')	复制

3 in (1, 2, 3)			True				元素是否存在

for x in (1, 2, 3): print x,	1 2 3				迭代



























