1, 确保已安装了 Python 和 pip 
安装 python3.7 版本可以选择 pip 一起安装 
最新python下载地址：https://www.python.org/downloads/

打开命令行工具
查看 python 版本：python --version
查看 pip 版本：pip --version #如果没有正常显示请重新打开一个命令行工具再输入

使用 pip 安装 Pipenv ：
pip install --user pipenv

注意：以上命令执行了 用户安装 模式，以防止破坏其他的包。
你通过 Pip 安装以后，如果 pipenv 命令并没有生效的话，你需要添加 基本目录 的路径到你的 PATH 中.
在 Linux 和 macOS 上，你可以通过运行 python -m site --user-base 命令然后在其结果后面加上 bin 来找到用户基础二进制文件。 
举个例子，上面的命令会输出 ~/.local （ ~ 代表当前登录用户 home 目录的绝对路径），
然后你需要把 ~/.local/bin 添加到 PATH 中去，通过 修改～/.profile 你可以让你的 PATH 永久生效。

在 Windows 上找用户基础二进制文件，你可以运行命令 py -m site --user-site 然后替换 site-packages 为 Scripts。
比如，前面的命令返回结果是 C:\Users\Username\AppData\Roaming\Python36\site-packages ，
那么你需要在 PATH 中包含 C:\Users\Username\AppData\Roaming\Python36\Scripts。
你可以在 控制面板 中设置 PATH 使其永久生效。当 PATH 改变后，你可能需要重启系统来使其生效。

查看 pipenv 版本：pipenv --version  #如果没有正常显示请重新打开一个命令行工具再输入

为你的项目安装软件包
Pipenv 管理每个项目的依赖。要安装软件包，先切换到你的项目目录（或者像本教程一样是个空目录）然后运行：
$ cd mypro
$ pipenv install requests

Pipenv 将会安装优秀的 Requests 库并在你的项目目录中创建一个 Pipfile 文件。 
这个 Pipfile 用来跟踪你项目所需的依赖，以防以后你需要重新安装它们，比如把你的项目分享给别人

看到下面这一段输出说明安装成功
Successfully created virtual environment!
Virtualenv location: C:\Users\shohan\.virtualenvs\mypro-zkon9fnk
Creating a Pipfile for this project…
Installing requests…
Adding requests to Pipfile's [packages]…
Installation Succeeded
Pipfile.lock not found, creating…
Locking [dev-packages] dependencies…
Locking [packages] dependencies…
Success!
Updated Pipfile.lock (444a6d)!
Installing dependencies from Pipfile.lock (444a6d)…
  ================================ 5/5 - 00:00:15
To activate this project's virtualenv, run pipenv shell.
Alternatively, run a command inside the virtualenv with pipenv run.


进入项目目录 cd mypro 会看到生成了两个文件 Pipfile   Pipfile.lock
现在 Requests 已经安装，你可以创建一个简单的 main.py 文件来使用它：
import requests
response = requests.get('https://httpbin.org/ip')
print('你的 IP 地址是 {0}'.format(response.json()['origin']))

然后你可以使用 pipenv run 来运行这个脚本：
$ pipenv run python main.py
你可以获得类似这样的输出：
你的 IP 地址是 121.33.115.17, 121.33.115.17
