集合的特点是：有的可变，有的不可变， 元素无次序，不可重复。集合不能切片操作
如果说元组是列表和字符串的某些特征的杂合，那么集合则可以说是列表和字典的某些特征的集合。
1）创建集合
空集合：s1 = set()
s = set('hello') //{'h','e','l','o'}
s = set(['h','e','l','l','o']) //{'h','e','l','o'}
注：集合中的元素必须是不可更改的，可以是字符串，元组，但不能是列表，字典，集合


2）set的方法
添加元素add()
>>>a = {'a','b','c'}
>>>a.add('abc')
>>>a //{'b', 'a', 'c', 'abc'}
>>>a.add(('aa','bb'))
>>>a //{('aa','bb'),'b','a',c','abc'}
a.add({'ab','cd'}) 报错 a.add(['ab','cd']) 报错 a.add({'a':'aaa','b':'bbb'}) 报错


3）更新并入update()
a = {'a'}
b = {'b','c'}
a.update(b)
a  //{'b', 'a', 'c'}
c = {'aa':'aaa','b':'bbb'}
a.update(c)
a //{'b', 'c', 'a', 'aa'}只取键名，去重复
d = ['a','c','bb']
a.update(d)
a //{'b', 'c', 'a', 'aa','bb'}
a.update('abcdef')
a //{'b', 'c', 'a','e','f' 'aa','bb','d'}


4）pop()随机删除元素，并返回，里面不能指定参数，会报错
a = {'a','b','c'}
a.pop() //'b'


5）remove()删除指定元素，必须带参数,没有返回值,如果指定元素不存在则报错
a = {'a','b','c'}
a.remove('a')
a //{'b','c'}
用discard()删除指定元素，如果存在就删除，否则不进行任何操作
a.discard('a')
a //{'b','c'}


6）全部清除clear()
a.clear()
a //set()


7）冰冻集合，不变的集合frozenset()
a = frozenset({'a','b','c'})
定义为不可变的集合后，不能操作上面的集合方法，会报错



8）集合运算，建议用含有名称的方法，少使用符号，因为运算符号的可读性不高，不记得单词可使用dir(set)
元素与集合的关系，一种关系，元素要么属于集合True，要么不属于False
a = {'a','b','c'}
'a' in a  //true

集合与集合的关系
A 是否等于 B
a = {'a','b','c'}
b = {'b','c','d'}
a == b //False
a != b //True

a = {'a','b','c'}
b = {'b','c'}

A 是否是 B 的子集，或 B 是否是 A 的超集
a < b //False
b < a 或 b.issubset(a)//True

A、B 的并集,即A、B 的所有元素，去重
a | b 或 a.union(b)  //{'b','c','a'}

A、B 的交集，相同的元素
a & b 或 a.intersection(b)  //{'b','c'}

A 相对 B 的差，即 A 相对 B 的不同部分
a = {'a','b','c'}
b = {'b','c'}
a - b 或 a.difference(b)   //{'a'}
b - a    //set() 空

A、B 的对称差集，即除去交集后的所有元素
a = {'q','i','s','r','w'}
b = {'a','q','i','l','o'}
a.symmetric_difference(b)   //{'l', 'w', 'o', 'a', 's', 'r'}
(a | b) - (a & b)  //得到的结果与上面的一样




