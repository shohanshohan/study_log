javascript 数组是一个按数字索引的数组
var arr = ['one','two','three'];
arr.length;  //设置或返回数组元素的个数。

以下是数组对象的常用方法：
（1）concat() 方法用于合并两个或多个数组,该方法不会改变现有的数组，而仅仅会返回被连接数组的一个副本.
注：该方法不会去重，如果有重复的值也只是按顺序连接
var arr = ['one','two','three'];
var arr2 = ['three','four','five'];
cosole.log(arr.concat(arr2)); // ["one", "two", "three", "three", "four", "five"]

（2）every() 方法用于检测数组所有元素是否都符合指定条件（通过函数提供），全部符合条件返回true否则false。
var ages = [18,16,19,20];
	function checkAge(age)
	{
		return age >= 18;
	}
document.getElementById('demo').innerHTML = ages.every(checkAge);

（3）filter() 方法创建一个新的数组，新数组中的元素是通过检查指定数组中符合条件的所有元素。
注： filter() 不会对空数组进行检测。 filter() 不会改变原始数组。
ages.filter(checkAge);

（4）find() 方法查找（函数内判断）的数组的第一个元素的值并返回。
注意: find() 对于空数组，函数是不会执行的。find() 并没有改变数组的原始值。
ages.find(checkAge); // 返回第一个匹配的值 18

（5）findIndex() 方法返回传入一个测试条件（函数）符合条件的数组第一个元素索引位置。
如果没有符合条件的元素返回 -1
ages.findIndex(checkAge); //返回0

（6）forEach() 方法用于调用数组的每个元素，并将元素传递给回调函数。
var ages = [18,16,19,20];
function age(item, index)
{
  document.write(item + '<br>');
}
ages.forEach(age);

（7）includes() 方法用来判断一个数组是否包含一个指定的值，如果是返回 true，否则false。
ages.includes(18); // true

（8）indexOf() 方法可返回数组中某个指定的元素第一次出现的索引位置。
ages.indexOf(19); //2
如果想查找字符串最后出现的位置，使用 lastIndexOf() 方法。

（9）Array.isArray(obj) 方法用于判断一个对象是否为数组。如果对象是数组返回 true，否则返回 false。
Array.isArray(ages); // true



