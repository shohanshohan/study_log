<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<title>css test</title>
	<link rel="stylesheet" href="">
	<style>
		body {background-color:#eee;}
		.d1 {
			width:300px;
			margin:30px auto;
			padding:10px;
			background:yellowgreen;
			/*border:20px solid #ccc;*/
			box-shadow: 0 0 0 10px green,
			            0 0 0 20px #ccc,
						0 0 0 25px deeppink,
						0 2px 5px 35px rgba(0,0,0,.6);
		}
	</style>
</head>
<body>
	<div class="d1">
	用box-shadow模拟边框效果,用border:;实现的效果几乎是一样的，
	这两者有什么不同呢？用border生成的边框宽度包含在盒子大小中，
	而box-shadow模拟的边框不占盒子的大小，其实只是投影，看起来像边框
	<p>这并没有什么了不起的，因为你完全可以用 border 属性来生成完全一样的边框效果。
	不过 box-shadow 的好处在于，它支持逗号分隔语法，我们可以创建任意数量的投影,
	像是多个边框围绕，这样做并不需要嵌套多余的盒子</p>
	<p>需要注意的是，box-shadow 是层层叠加的，第一层投影位于最顶层，依次类推。因此，你需要按此规律调整扩张半径。比如说，在前面的代码中，我们想在外圈再加一道5px的外框，那就需要指定扩张半径的值为15px（10px+5px）。
	如果你愿意，甚至还可以在这些“边框”的底下再加一层常规的投影</p>
	<p>box-shadow参数有6个：
	水平阴影位置（必须，允许负值），
	垂直阴影位置（必须，允许负值），
	模糊距离（可选），
	阴影的尺寸（可选），
	阴影的颜色（可选），
	阴影效果（可选，默认为外部阴影outset，inset改为内部阴影）
	</p>
	</div>
</body>
</html>
