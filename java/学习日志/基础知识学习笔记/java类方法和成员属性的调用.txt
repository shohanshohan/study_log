Java类里面成员方法之间相互调用的规则
静态方法不能直接调用非静态方法和类属性，如果要调用普通方法则要先取得对象实例再调用
而对于同样是静态的方法则可以直接调用或引用类名调用
对于普通方法之间的调用，可以用this前缀或直接调用
如：
public class Test
{

public void b() 
{
}
public void getab()
{
   b(); //普通方法调用普通方法，this.b(); 效果一样
   ab(); //对于在普通方法里调用类的静态方法，也可以这样  this.ab(); Test.ab(); 这三种调用的效果是一样的
  
}
public static void ab()
{
}
public static void a()
{
    ab();  //静态方法调用静态方法，效果和 Test.ab() 是一样的
    Test obj = new Test(); //静态方法调用非静态方法时
    test.b();
}

}


推荐的用法是：
关于普通方法调用普通方法用this前缀：this.a(); 注：当方法中含有类成员变量同名的局部变量时，必须申明this
关于静态方法调用静态方法用类前缀：Test.a();
关于普通方法调用静态方法用类前缀：Test.a();
关于静态方法调用普通方法先取得实例对象：(new Test()).a();
